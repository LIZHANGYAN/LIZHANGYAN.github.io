<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>你好，欢迎</title>
  
  <subtitle>闲话多说</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://lizhangyan.github.io/"/>
  <updated>2017-12-14T02:41:43.273Z</updated>
  <id>https://lizhangyan.github.io/</id>
  
  <author>
    <name>lizhangyan</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>六级翻译</title>
    <link href="https://lizhangyan.github.io/2017/12/14/%E5%85%AD%E7%BA%A7%E7%BF%BB%E8%AF%91/"/>
    <id>https://lizhangyan.github.io/2017/12/14/六级翻译/</id>
    <published>2017-12-14T02:39:57.000Z</published>
    <updated>2017-12-14T02:41:43.273Z</updated>
    
    <content type="html"><![CDATA[<img src="/2017/12/14/六级翻译/1.jpg" title="六级翻译"><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;/2017/12/14/六级翻译/1.jpg&quot; title=&quot;六级翻译&quot;&gt;
    
    </summary>
    
      <category term="考试" scheme="https://lizhangyan.github.io/categories/%E8%80%83%E8%AF%95/"/>
    
    
      <category term="六级" scheme="https://lizhangyan.github.io/tags/%E5%85%AD%E7%BA%A7/"/>
    
  </entry>
  
  <entry>
    <title>python基础</title>
    <link href="https://lizhangyan.github.io/2017/12/13/python%E5%9F%BA%E7%A1%80/"/>
    <id>https://lizhangyan.github.io/2017/12/13/python基础/</id>
    <published>2017-12-13T11:47:07.000Z</published>
    <updated>2017-12-14T02:27:05.971Z</updated>
    
    <content type="html"><![CDATA[<img src="/2017/12/13/python基础/1.jpg" title="PYTHON"><a id="more"></a><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h2 id="在GNU-Linux下安装"><a href="#在GNU-Linux下安装" class="headerlink" title="在GNU/Linux下安装"></a>在GNU/Linux下安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update &amp;&amp; apt-get install python3</span><br></pre></td></tr></table></figure><h2 id="编辑器"><a href="#编辑器" class="headerlink" title="编辑器"></a>编辑器</h2><ul><li>教育版的PyCharm</li><li>Vim + jedi-vim</li></ul><h1 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h1><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><p>  <strong>注释</strong>是任何存在于<strong>#</strong>号右侧的文字，主要作用是写给读者看的笔记<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(&apos;hello world&apos;) # print 函数</span><br></pre></td></tr></table></figure></p><h2 id="字面常量"><a href="#字面常量" class="headerlink" title="字面常量"></a>字面常量</h2><p>  一个字面常量（Literal Constants）的例子是诸如5、1.23这样的数字，或者是如<code>这是一串文本</code> 或 <code>This is a string</code> 这样的文本。</p><h2 id="数字"><a href="#数字" class="headerlink" title="数字"></a>数字</h2><ul><li>整数 Integers</li><li>浮点数 Floats</li></ul><h2 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h2><p>  一串字符串（String）是字符（Characters）的序列（Sequence）。<br>  字符串是不可变的。</p><h2 id="引号"><a href="#引号" class="headerlink" title="引号"></a>引号</h2><ul><li><p>单引号</p><p><code>&#39;Quote me on this&#39;</code></p></li><li><p>双引号</p><p><code>&quot;What&#39;s your name?&quot;</code></p></li><li><p>三引号<br>用来指定多行字符串，可以在三引号之间自由换行。</p><h2 id="格式化方法"><a href="#格式化方法" class="headerlink" title="格式化方法"></a>格式化方法</h2><p>使用<strong>format()</strong>方法从其他变量构建字符串。<br>如，str_format.py:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">age = 20</span><br><span class="line">name = &apos;Swaroop&apos;</span><br><span class="line"></span><br><span class="line">print(&apos;&#123;0&#125; was &#123;1&#125; years old when he wrote this book&apos;.format(name,age))</span><br></pre></td></tr></table></figure></li></ul><h2 id="转义序列"><a href="#转义序列" class="headerlink" title="转义序列"></a>转义序列</h2><ul><li>换行符<code>\n</code></li><li>制表符<code>\t</code></li><li>单引号<code>\&#39;</code><br><code>What\&#39;s your name?</code></li><li>原始字符串<br>未经特殊处理的字符串，比如转义序列，要在字符串前加<strong>r</strong>或<strong>R</strong>, 例如<br>  <code>r&quot;Newlines are indicated by \n&quot;</code><blockquote><p>使用正则表达式时应全程使用<strong>原始字符串</strong></p></blockquote></li></ul><h2 id="变量-Veriables"><a href="#变量-Veriables" class="headerlink" title="变量 Veriables"></a>变量 Veriables</h2><blockquote><p>变量的值可以变化</p><h2 id="对象-Object"><a href="#对象-Object" class="headerlink" title="对象 Object"></a>对象 Object</h2><p>Python是<strong>强面向对象</strong>的，因为所有的一切都是对象，包括<em>数字、字符串与函数</em>.</p></blockquote><h2 id="逻辑行与物理行"><a href="#逻辑行与物理行" class="headerlink" title="逻辑行与物理行"></a>逻辑行与物理行</h2><ul><li>Physical Line<blockquote><p>编写程序是所看到的内容</p></blockquote></li><li><p>Logical Line</p><blockquote><p>Python编辑器所看到的单个语句</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 一个物理行，两个逻辑行</span><br><span class="line">i = 5; print(i);</span><br><span class="line"></span><br><span class="line"># 两个物理行，两个逻辑行</span><br><span class="line">i = 5;</span><br><span class="line">print(i)</span><br></pre></td></tr></table></figure></li><li><p>显式行连接<br>如果有一行非常长的代码，可以用反斜杠将其拆分成多个物理行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">s = &apos;This is a string, \</span><br><span class="line">This continues the string.&apos;</span><br></pre></td></tr></table></figure></li><li><p>隐式行连接<br>逻辑行以括号开始。</p></li></ul><h2 id="缩进"><a href="#缩进" class="headerlink" title="缩进"></a>缩进</h2><p><strong>空白区</strong>在Python中十分重要。逻辑行的开头留下空白区（空格或者制表符）用以确定行的缩进级别，并且确定语句分组。</p><h2 id="具有相同缩进的语句被称为块-block"><a href="#具有相同缩进的语句被称为块-block" class="headerlink" title="具有相同缩进的语句被称为块(block)"></a>具有相同缩进的语句被称为<strong>块(block)</strong></h2><h1 id="运算符与表达式"><a href="#运算符与表达式" class="headerlink" title="运算符与表达式"></a>运算符与表达式</h1><h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><ul><li><code>+</code></li><li><code>-</code></li><li><code>*</code></li><li><code>**</code> 乘方</li><li><code>/</code></li><li><code>//</code> 整除<blockquote><p>x 除以 y 并对结果向下取整</p></blockquote></li><li><code>%</code></li><li><code>&lt;&lt;</code> 左移<blockquote><p>二进制</p></blockquote></li><li><code>&gt;&gt;</code> 右移<blockquote><p>二进制</p></blockquote></li><li><code>&amp;</code> 按位与</li><li><code>|</code> 按位或</li><li><code>^</code> 按位异或</li><li><code>~</code> 按位取反</li><li><code>&lt;</code>, <code>&lt;=</code></li><li><code>&gt;</code>, <code>&gt;=</code></li><li><code>==</code>, <code>!=</code></li><li><code>not</code>, <code>and</code>, <code>or</code><h2 id="数值运算与赋值的快捷方式"><a href="#数值运算与赋值的快捷方式" class="headerlink" title="数值运算与赋值的快捷方式"></a>数值运算与赋值的快捷方式</h2></li><li><code>变量 = 变量 运算 表达式</code> –&gt; <code>变量 运算 = 表达式</code></li><li><p>求值顺序</p><blockquote><p>最好使用<strong>圆括号</strong>进行分组</p></blockquote><ul><li><code>ambda</code>: Lambda 表达式</li><li><code>if - else</code>: 条件表达式</li><li><code>or</code></li><li><code>and</code></li><li><code>not x</code></li><li><code>in</code>, <code>not in</code>, <code>is</code>, <code>is not</code>, <code>&lt;</code>, <code>&lt;=</code>, <code>&gt;</code>,<code>&gt;=</code>, <code>!=</code>,<code>==</code></li><li><code>|</code></li><li><code>^</code></li><li><code>&amp;</code></li><li><code>&lt;&lt;</code>, <code>&gt;&gt;</code></li><li>+, -</li><li><code>*</code>, <code>/</code>, <code>//</code></li><li><code>+x</code>,<code>-x</code>, <code>~x</code> :正、负、按位取反</li><li><code>**</code></li><li><code>x[index]</code>, <code>x[index:index]</code>, <code>x(arguments...)</code>, <code>x.attribute</code> :下标、切片、调用、属性引用</li><li><code>(expressiongs...)</code>, <code>[expressions...]</code>, <code>{key:value...}</code>, <code>{expressions...}</code> : 显示绑定或数组、显示列表、显示字典、显示设置<blockquote><p>上述优先级从下往上越来越高</p></blockquote></li></ul></li></ul><hr><h1 id="控制流"><a href="#控制流" class="headerlink" title="控制流"></a>控制流</h1><p>Python中有三种控制流语句-<code>if</code>,<code>for</code> 和 <code>while</code>。</p><h2 id="if-语句"><a href="#if-语句" class="headerlink" title="if 语句"></a><strong>if</strong> 语句</h2><p><em>if</em> 语句用以检查条件：如果条件为真（True）</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">number = 23;</span><br><span class="line">guess = int(input(&apos;Enter an integer : &apos;))</span><br><span class="line"></span><br><span class="line">if guess == number:</span><br><span class="line">    print(&apos;Congratulations, you guessed it.&apos;)</span><br><span class="line">    print(&apos;(but you do not win any prizes!)&apos;)</span><br><span class="line">elif guess &lt; number:</span><br><span class="line">    print(&apos;No, it is a little higher than that&apos;)</span><br><span class="line">else:</span><br><span class="line">    print(&apos;No, it is a little lower than that&apos;)</span><br><span class="line"></span><br><span class="line">print(&apos;Done&apos;)</span><br></pre></td></tr></table></figure><h2 id="while-语句"><a href="#while-语句" class="headerlink" title="while 语句"></a><strong>while</strong> 语句</h2><p><em>while</em> 语句当条件为真时重复执行某块语句</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">number = 23</span><br><span class="line">running = True</span><br><span class="line"></span><br><span class="line">while running:</span><br><span class="line">    guess = int(input(&apos;Enter an integer : &apos;))</span><br><span class="line">    if guess == number:</span><br><span class="line">        print(&apos;Congratulations, you guess it.&apos;)</span><br><span class="line">        running = False</span><br><span class="line">    elif guess &lt;=number:</span><br><span class="line">        print(&apos;No, it is a little higher than that.&apos;)</span><br><span class="line">    else:</span><br><span class="line">        print(&apos;No, it is a little lower than that.&apos;)</span><br><span class="line">else:</span><br><span class="line">    print(&apos;The while loop is over.&apos;)</span><br><span class="line"></span><br><span class="line">print(&apos;Done&apos;)</span><br></pre></td></tr></table></figure><h2 id="for-语句"><a href="#for-语句" class="headerlink" title="for 语句"></a><strong>for</strong> 语句</h2><p><em>for…in</em> 语句会在一系列对象上进行迭代（Iterates）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">for i in range(2, 5):</span><br><span class="line">    print(i)</span><br><span class="line">else:</span><br><span class="line">    print(&apos;The for loop is over&apos;)</span><br></pre></td></tr></table></figure><blockquote><p><code>range()</code> 函数生成数字序列</p></blockquote><hr><h1 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h1><p><strong>函数</strong> 是指可重复使用的程序片段。通过关键词<strong><em>def</em></strong>来定义。</p><ul><li><p>案例一 无参函数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">def say_hello():</span><br><span class="line">    print(&apos;hello world&apos;)</span><br><span class="line"></span><br><span class="line">say_hello()</span><br><span class="line">say_hello()</span><br></pre></td></tr></table></figure></li><li><p>案例二 带参函数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">def print_max(a, b):</span><br><span class="line">  if a &gt; b:</span><br><span class="line">      print(a, &apos;is maximum&apos;)</span><br><span class="line">  elif a == b:</span><br><span class="line">      print(a, &apos;is equal to&apos;, b)</span><br><span class="line">  else:</span><br><span class="line">      print(b, &apos;is maximum&apos;)</span><br><span class="line"></span><br><span class="line">print_max(3, 4)</span><br><span class="line"></span><br><span class="line">x = 5</span><br><span class="line">y = 7</span><br><span class="line">print_max(x, y)</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;/2017/12/13/python基础/1.jpg&quot; title=&quot;PYTHON&quot;&gt;
    
    </summary>
    
      <category term="就会这么点语言" scheme="https://lizhangyan.github.io/categories/%E5%B0%B1%E4%BC%9A%E8%BF%99%E4%B9%88%E7%82%B9%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="python" scheme="https://lizhangyan.github.io/tags/python/"/>
    
      <category term="语言" scheme="https://lizhangyan.github.io/tags/%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>六级作文模板</title>
    <link href="https://lizhangyan.github.io/2017/12/12/%E5%85%AD%E7%BA%A7%E4%BD%9C%E6%96%87%E6%A8%A1%E6%9D%BF/"/>
    <id>https://lizhangyan.github.io/2017/12/12/六级作文模板/</id>
    <published>2017-12-12T02:00:02.000Z</published>
    <updated>2017-12-14T02:43:42.086Z</updated>
    
    <content type="html"><![CDATA[<img src="/2017/12/12/六级作文模板/1.jpg" title="六级作文"><a id="more"></a><h3 id="万能模板句"><a href="#万能模板句" class="headerlink" title="万能模板句"></a>万能模板句</h3><p>引出相同观点</p><blockquote><ul><li><p>With the development of sicence and techology, more and more people believe that …</p></li><li><p>Many people insist that …</p></li><li><p>A lot of people seem to think that …</p></li></ul></blockquote><p>引出不同观点</p><blockquote><ul><li><p>People’s views on … vary from person to person. Some hold that …. However, others believe that…</p></li><li><p>Attitudes towards (drugs) vary from person to person.</p></li><li><p>There are different opinions among people as to …</p></li><li><p>Different people hold different attitudes towards (failure).</p></li><li><p>Just as the popular saying goes, “Every coin has two sides”. From one side, …. From the other side, … .</p></li></ul></blockquote><p>得出最终结论</p><blockquote><ul><li><p>Taking all these factors into consideration, we naturally come to the conclusion that …</p></li><li><p>Taking into account all these factors, we may reasonably come to the conclusion that …</p></li><li><p>Hence/Therefore, we’d better come to the conclusion that…</p></li><li><p>There is no doubt that (job-hopping) has its drawbacks as well as merits.</p></li><li><p>All in all, we cannot live without… But at the same time we must try to find out new ways to cope with the problems that would arise.</p></li></ul></blockquote><p>提出最终建议</p><blockquote><ul><li><p>It is high time that we put an end to the (trend).</p></li><li><p>It is time to the advice of … and to put special emphasis on the improvement of …</p></li><li><p>There is no doubt that enough concern must be paid to the problem of …</p></li><li><p>Obviously, … If we want to do something…, it is essential that…</p></li><li><p>Only in this way can we …</p></li><li><p>It must be realized that …</p></li></ul></blockquote><p>预示后果</p><blockquote><ul><li><p>Obviously, if we don’t control the problem, the chances are that… will lead us in danger.</p></li><li><p>No doubt, unless we take effective measures, it is very likely that…</p></li><li><p>It is urgent that immediate measure should be taken to stop the situation.</p></li></ul></blockquote><blockquote><p>新东方在线四六级</p><footer><strong>知乎</strong><cite><a href="https://www.zhihu.com/search?type=content&q=%E5%85%AD%E7%BA%A7%E4%BD%9C%E6%96%87%E6%A8%A1%E6%9D%BF" target="_blank" rel="noopener">六级作文模板话题</a></cite></footer></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;/2017/12/12/六级作文模板/1.jpg&quot; title=&quot;六级作文&quot;&gt;
    
    </summary>
    
      <category term="考试" scheme="https://lizhangyan.github.io/categories/%E8%80%83%E8%AF%95/"/>
    
    
      <category term="六级" scheme="https://lizhangyan.github.io/tags/%E5%85%AD%E7%BA%A7/"/>
    
  </entry>
  
  <entry>
    <title>My Gallery</title>
    <link href="https://lizhangyan.github.io/2017/12/11/My-Gallery/"/>
    <id>https://lizhangyan.github.io/2017/12/11/My-Gallery/</id>
    <published>2017-12-11T14:19:06.000Z</published>
    <updated>2017-12-13T11:39:10.656Z</updated>
    
    <content type="html"><![CDATA[<h1 id="OBAMA"><a href="#OBAMA" class="headerlink" title="OBAMA"></a>OBAMA</h1><img src="/2017/12/11/My-Gallery/obama.jpg"><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;OBAMA&quot;&gt;&lt;a href=&quot;#OBAMA&quot; class=&quot;headerlink&quot; title=&quot;OBAMA&quot;&gt;&lt;/a&gt;OBAMA&lt;/h1&gt;&lt;img src=&quot;/2017/12/11/My-Gallery/obama.jpg&quot;&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>[原]VPS+Shadowsocks+Ubuntu+Chrome</title>
    <link href="https://lizhangyan.github.io/2017/10/18/%E5%8E%9F-VPS-Shadowsocks-Ubuntu-Chrome/"/>
    <id>https://lizhangyan.github.io/2017/10/18/原-VPS-Shadowsocks-Ubuntu-Chrome/</id>
    <published>2017-10-18T11:42:35.000Z</published>
    <updated>2017-12-13T09:39:06.890Z</updated>
    
    <content type="html"><![CDATA[<h1 id="待办"><a href="#待办" class="headerlink" title="待办"></a>待办</h1><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;待办&quot;&gt;&lt;a href=&quot;#待办&quot; class=&quot;headerlink&quot; title=&quot;待办&quot;&gt;&lt;/a&gt;待办&lt;/h1&gt;
    
    </summary>
    
      <category term="不会翻墙你好意思吗" scheme="https://lizhangyan.github.io/categories/%E4%B8%8D%E4%BC%9A%E7%BF%BB%E5%A2%99%E4%BD%A0%E5%A5%BD%E6%84%8F%E6%80%9D%E5%90%97/"/>
    
    
      <category term="VPS" scheme="https://lizhangyan.github.io/tags/VPS/"/>
    
      <category term="VPN" scheme="https://lizhangyan.github.io/tags/VPN/"/>
    
  </entry>
  
  <entry>
    <title>[原]人脸识别中的rank-n 代表的意思</title>
    <link href="https://lizhangyan.github.io/2017/09/02/%E5%8E%9F-%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB%E4%B8%AD%E7%9A%84rank-n-%E4%BB%A3%E8%A1%A8%E7%9A%84%E6%84%8F%E6%80%9D/"/>
    <id>https://lizhangyan.github.io/2017/09/02/原-人脸识别中的rank-n-代表的意思/</id>
    <published>2017-09-02T03:05:13.000Z</published>
    <updated>2017-12-13T09:37:49.389Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Rank-1"><a href="#Rank-1" class="headerlink" title="Rank-1"></a>Rank-1</h1><p>看一些论文总是在结果中看到rank-1，等等，但是就不知道什么意思，今天终于搞明白了，备注一下。<br><a id="more"></a></p><h1 id="意思"><a href="#意思" class="headerlink" title="意思"></a>意思</h1><p>rank 1， 就是第一次命中</p><p>rank k，就是在第k次以内命中</p><p>人脸识别中，就代表，与目标人脸，最相似的k个人脸中，成功命中（找到正确人脸）的概率（和）。</p><p>RANK曲线，一般又被称呼为CMC曲线。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Rank-1&quot;&gt;&lt;a href=&quot;#Rank-1&quot; class=&quot;headerlink&quot; title=&quot;Rank-1&quot;&gt;&lt;/a&gt;Rank-1&lt;/h1&gt;&lt;p&gt;看一些论文总是在结果中看到rank-1，等等，但是就不知道什么意思，今天终于搞明白了，备注一下。&lt;br&gt;
    
    </summary>
    
      <category term="这个课题不好搞" scheme="https://lizhangyan.github.io/categories/%E8%BF%99%E4%B8%AA%E8%AF%BE%E9%A2%98%E4%B8%8D%E5%A5%BD%E6%90%9E/"/>
    
    
      <category term="人脸识别" scheme="https://lizhangyan.github.io/tags/%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB/"/>
    
  </entry>
  
  <entry>
    <title>[原]统计学习方法笔记（二）</title>
    <link href="https://lizhangyan.github.io/2017/05/26/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <id>https://lizhangyan.github.io/2017/05/26/统计学习方法（二）/</id>
    <published>2017-05-26T01:27:26.000Z</published>
    <updated>2017-12-14T02:43:26.866Z</updated>
    
    <content type="html"><![CDATA[<h1 id="统计学习方法"><a href="#统计学习方法" class="headerlink" title="统计学习方法"></a>统计学习方法</h1><p>大部分内容总结自<strong>李航</strong>博士的<strong><em>统计学习方法</em></strong></p><p>课件：<a href="http://download.csdn.net/detail/u012610276/9850578" target="_blank" rel="noopener">统计学习方法课件</a></p><h2 id="2-感知机"><a href="#2-感知机" class="headerlink" title="2.感知机"></a>2.感知机</h2><p><strong><em>Define:</em></strong>它是一个二分类的线性分类模型，其输入为实例的特征向量，输出为实例的类别，取<strong>{+1，-1}</strong>。</p><h3 id="2-1感知机模型"><a href="#2-1感知机模型" class="headerlink" title="2.1感知机模型"></a>2.1感知机模型</h3><a id="more"></a><p>感知机是一个判别模型，所以它有自己的决策函数：</p><p><span class="MathJax_Preview"></span><div class="MathJax_Display" role="textbox" aria-readonly="true" style="text-align: center;"><span class="MathJax" id="MathJax-Element-1654-Frame"><nobr><span class="math" id="MathJax-Span-20751" style="width: 11.547em; display: inline-block;"><span style="display: inline-block; position: relative; width: 9.379em; height: 0px; font-size: 123%;"><span style="position: absolute; clip: rect(1.358em 1000em 2.713em -0.431em); top: -2.274em; left: 0.003em;"><span class="mrow" id="MathJax-Span-20752"><span class="mi" id="MathJax-Span-20753" style="font-family: MathJax_Math-italic;">f<span style="display: inline-block; overflow: hidden; height: 1px; width: 0.057em;"></span></span><span class="mo" id="MathJax-Span-20754" style="font-family: MathJax_Main;">(</span><span class="mi" id="MathJax-Span-20755" style="font-family: MathJax_Math-italic;">x</span><span class="mo" id="MathJax-Span-20756" style="font-family: MathJax_Main;">)</span><span class="mo" id="MathJax-Span-20757" style="font-family: MathJax_Main; padding-left: 0.274em;">=</span><span class="mi" id="MathJax-Span-20758" style="font-family: MathJax_Math-italic; padding-left: 0.274em;">s</span><span class="mi" id="MathJax-Span-20759" style="font-family: MathJax_Math-italic;">i</span><span class="mi" id="MathJax-Span-20760" style="font-family: MathJax_Math-italic;">g<span style="display: inline-block; overflow: hidden; height: 1px; width: 0.003em;"></span></span><span class="mi" id="MathJax-Span-20761" style="font-family: MathJax_Math-italic;">n</span><span class="mo" id="MathJax-Span-20762" style="font-family: MathJax_Main;">(</span><span class="mi" id="MathJax-Span-20763" style="font-family: MathJax_Math-italic;">w</span><span class="mo" id="MathJax-Span-20764" style="font-family: MathJax_Main; padding-left: 0.22em;">⋅</span><span class="mi" id="MathJax-Span-20765" style="font-family: MathJax_Math-italic; padding-left: 0.22em;">x</span><span class="mo" id="MathJax-Span-20766" style="font-family: MathJax_Main; padding-left: 0.22em;">+</span><span class="mi" id="MathJax-Span-20767" style="font-family: MathJax_Math-italic; padding-left: 0.22em;">b</span><span class="mo" id="MathJax-Span-20768" style="font-family: MathJax_Main;">)</span></span><span style="display: inline-block; width: 0px; height: 2.279em;"></span></span></span><span style="border-left-width: 0.003em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.337em; vertical-align: -0.397em;"></span></span></nobr></span></div><script type="math/tex; mode=display" id="MathJax-Element-1654">f(x)=sign(w \cdot x+b)</script></p><p><strong>特征空间：</strong><span class="MathJax_Preview"></span><div class="MathJax_Display" role="textbox" aria-readonly="true" style="text-align: center;"><span class="MathJax" id="MathJax-Element-1655-Frame"><nobr><span class="math" id="MathJax-Span-20769" style="width: 7.482em; display: inline-block;"><span style="display: inline-block; position: relative; width: 6.073em; height: 0px; font-size: 123%;"><span style="position: absolute; clip: rect(1.412em 1000em 2.659em -0.485em); top: -2.274em; left: 0.003em;"><span class="mrow" id="MathJax-Span-20770"><span class="mi" id="MathJax-Span-20771" style="font-family: MathJax_Math-italic;">χ</span><span class="mo" id="MathJax-Span-20772" style="font-family: MathJax_Main; padding-left: 0.274em;">⊆</span><span class="msubsup" id="MathJax-Span-20773" style="padding-left: 0.274em;"><span style="display: inline-block; position: relative; width: 1.249em; height: 0px;"><span style="position: absolute; clip: rect(1.412em 1000em 2.442em -0.431em); top: -2.274em; left: 0.003em;"><span class="mi" id="MathJax-Span-20774" style="font-family: MathJax_Math-italic;">R</span><span style="display: inline-block; width: 0px; height: 2.279em;"></span></span><span style="position: absolute; top: -2.707em; left: 0.762em;"><span class="mi" id="MathJax-Span-20775" style="font-size: 70.7%; font-family: MathJax_Math-italic;">n</span><span style="display: inline-block; width: 0px; height: 2.279em;"></span></span></span></span><span class="mo" id="MathJax-Span-20776" style="font-family: MathJax_Main;">,</span><span class="mi" id="MathJax-Span-20777" style="font-family: MathJax_Math-italic; padding-left: 0.165em;">x</span><span class="mo" id="MathJax-Span-20778" style="font-family: MathJax_Main; padding-left: 0.274em;">⊆</span><span class="mi" id="MathJax-Span-20779" style="font-family: MathJax_Math-italic; padding-left: 0.274em;">χ</span></span><span style="display: inline-block; width: 0px; height: 2.279em;"></span></span></span><span style="border-left-width: 0.003em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.27em; vertical-align: -0.33em;"></span></span></nobr></span></div><script type="math/tex; mode=display" id="MathJax-Element-1655">\chi \subseteq R^n, x \subseteq \chi</script></p><p><strong>输出空间：</strong><span class="MathJax_Preview"></span><div class="MathJax_Display" role="textbox" aria-readonly="true" style="text-align: center;"><span class="MathJax" id="MathJax-Element-1656-Frame"><nobr><span class="math" id="MathJax-Span-20780" style="width: 5.911em; display: inline-block;"><span style="display: inline-block; position: relative; width: 4.772em; height: 0px; font-size: 123%;"><span style="position: absolute; clip: rect(1.466em 1000em 2.659em -0.485em); top: -2.274em; left: 0.003em;"><span class="mrow" id="MathJax-Span-20781"><span class="mi" id="MathJax-Span-20782" style="font-family: MathJax_Math-italic;">y<span style="display: inline-block; overflow: hidden; height: 1px; width: 0.003em;"></span></span><span class="mo" id="MathJax-Span-20783" style="font-family: MathJax_Main; padding-left: 0.274em;">=</span><span class="texatom" id="MathJax-Span-20784" style="padding-left: 0.274em;"><span class="mrow" id="MathJax-Span-20785"><span class="mo" id="MathJax-Span-20786" style="font-family: MathJax_Main;">+</span><span class="mn" id="MathJax-Span-20787" style="font-family: MathJax_Main;">1</span><span class="mo" id="MathJax-Span-20788" style="font-family: MathJax_Main;">,</span><span class="mo" id="MathJax-Span-20789" style="font-family: MathJax_Main; padding-left: 0.165em;">−</span><span class="mn" id="MathJax-Span-20790" style="font-family: MathJax_Main;">1</span></span></span></span><span style="display: inline-block; width: 0px; height: 2.279em;"></span></span></span><span style="border-left-width: 0.003em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.203em; vertical-align: -0.33em;"></span></span></nobr></span></div><script type="math/tex; mode=display" id="MathJax-Element-1656">y={+1,-1}</script></p><p><strong>权值：</strong><span class="MathJax_Preview"></span><div class="MathJax_Display" role="textbox" aria-readonly="true" style="text-align: center;"><span class="MathJax" id="MathJax-Element-1657-Frame"><nobr><span class="math" id="MathJax-Span-20791" style="width: 4.068em; display: inline-block;"><span style="display: inline-block; position: relative; width: 3.309em; height: 0px; font-size: 123%;"><span style="position: absolute; clip: rect(1.412em 1000em 2.604em -0.485em); top: -2.274em; left: 0.003em;"><span class="mrow" id="MathJax-Span-20792"><span class="mi" id="MathJax-Span-20793" style="font-family: MathJax_Math-italic;">w</span><span class="mo" id="MathJax-Span-20794" style="font-family: MathJax_Main; padding-left: 0.274em;">⊆</span><span class="msubsup" id="MathJax-Span-20795" style="padding-left: 0.274em;"><span style="display: inline-block; position: relative; width: 1.249em; height: 0px;"><span style="position: absolute; clip: rect(1.412em 1000em 2.442em -0.431em); top: -2.274em; left: 0.003em;"><span class="mi" id="MathJax-Span-20796" style="font-family: MathJax_Math-italic;">R</span><span style="display: inline-block; width: 0px; height: 2.279em;"></span></span><span style="position: absolute; top: -2.707em; left: 0.762em;"><span class="mi" id="MathJax-Span-20797" style="font-size: 70.7%; font-family: MathJax_Math-italic;">n</span><span style="display: inline-block; width: 0px; height: 2.279em;"></span></span></span></span></span><span style="display: inline-block; width: 0px; height: 2.279em;"></span></span></span><span style="border-left-width: 0.003em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.203em; vertical-align: -0.263em;"></span></span></nobr></span></div><script type="math/tex; mode=display" id="MathJax-Element-1657">w \subseteq R^n</script></p><p><strong>偏置：</strong><span class="MathJax_Preview"></span><div class="MathJax_Display" role="textbox" aria-readonly="true" style="text-align: center;"><span class="MathJax" id="MathJax-Element-1658-Frame"><nobr><span class="math" id="MathJax-Span-20798" style="width: 3.092em; display: inline-block;"><span style="display: inline-block; position: relative; width: 2.496em; height: 0px; font-size: 123%;"><span style="position: absolute; clip: rect(1.412em 1000em 2.604em -0.431em); top: -2.274em; left: 0.003em;"><span class="mrow" id="MathJax-Span-20799"><span class="mi" id="MathJax-Span-20800" style="font-family: MathJax_Math-italic;">b</span><span class="mo" id="MathJax-Span-20801" style="font-family: MathJax_Main; padding-left: 0.274em;">⊆</span><span class="mi" id="MathJax-Span-20802" style="font-family: MathJax_Math-italic; padding-left: 0.274em;">R</span></span><span style="display: inline-block; width: 0px; height: 2.279em;"></span></span></span><span style="border-left-width: 0.003em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.137em; vertical-align: -0.263em;"></span></span></nobr></span></div><script type="math/tex; mode=display" id="MathJax-Element-1658">b \subseteq R</script></p><p><strong>sign表示符号函数：</strong><span class="MathJax_Preview"></span><div class="MathJax_Display" role="textbox" aria-readonly="true" style="text-align: center;"><span class="MathJax" id="MathJax-Element-1659-Frame"><nobr><span class="math" id="MathJax-Span-20803" style="width: 13.173em; display: inline-block;"><span style="display: inline-block; position: relative; width: 10.68em; height: 0px; font-size: 123%;"><span style="position: absolute; clip: rect(1.683em 1000em 4.447em -0.431em); top: -3.304em; left: 0.003em;"><span class="mrow" id="MathJax-Span-20804"><span class="mi" id="MathJax-Span-20805" style="font-family: MathJax_Math-italic;">s</span><span class="mi" id="MathJax-Span-20806" style="font-family: MathJax_Math-italic;">i</span><span class="mi" id="MathJax-Span-20807" style="font-family: MathJax_Math-italic;">g<span style="display: inline-block; overflow: hidden; height: 1px; width: 0.003em;"></span></span><span class="mi" id="MathJax-Span-20808" style="font-family: MathJax_Math-italic;">n</span><span class="mo" id="MathJax-Span-20809" style="font-family: MathJax_Main;">(</span><span class="mi" id="MathJax-Span-20810" style="font-family: MathJax_Math-italic;">x</span><span class="mo" id="MathJax-Span-20811" style="font-family: MathJax_Main;">)</span><span class="mo" id="MathJax-Span-20812" style="font-family: MathJax_Main; padding-left: 0.274em;">=</span><span class="mrow" id="MathJax-Span-20813" style="padding-left: 0.274em;"><span class="mo" id="MathJax-Span-20814" style="vertical-align: 0.003em; padding-left: 0.274em;"><span style="font-family: MathJax_Size3;">{</span></span><span class="mtable" id="MathJax-Span-20815" style="padding-right: 0.165em; padding-left: 0.165em;"><span style="display: inline-block; position: relative; width: 4.827em; height: 0px;"><span style="position: absolute; clip: rect(2.659em 1000em 5.043em -0.431em); top: -4.008em; left: 0.003em;"><span style="display: inline-block; position: relative; width: 1.52em; height: 0px;"><span style="position: absolute; clip: rect(1.466em 1000em 2.659em -0.431em); top: -2.816em; left: 0.003em;"><span class="mtd" id="MathJax-Span-20816"><span class="mrow" id="MathJax-Span-20817"><span class="mo" id="MathJax-Span-20818" style="font-family: MathJax_Main;">+</span><span class="mn" id="MathJax-Span-20819" style="font-family: MathJax_Main;">1</span><span class="mo" id="MathJax-Span-20820" style="font-family: MathJax_Main;">,</span></span></span><span style="display: inline-block; width: 0px; height: 2.279em;"></span></span><span style="position: absolute; clip: rect(1.466em 1000em 2.659em -0.377em); top: -1.623em; left: 0.003em;"><span class="mtd" id="MathJax-Span-20826"><span class="mrow" id="MathJax-Span-20827"><span class="mo" id="MathJax-Span-20828" style="font-family: MathJax_Main;">−</span><span class="mn" id="MathJax-Span-20829" style="font-family: MathJax_Main;">1</span><span class="mo" id="MathJax-Span-20830" style="font-family: MathJax_Main;">,</span></span></span><span style="display: inline-block; width: 0px; height: 2.279em;"></span></span></span><span style="display: inline-block; width: 0px; height: 4.014em;"></span></span><span style="position: absolute; clip: rect(2.659em 1000em 4.881em -0.431em); top: -4.008em; left: 2.496em;"><span style="display: inline-block; position: relative; width: 2.333em; height: 0px;"><span style="position: absolute; clip: rect(1.466em 1000em 2.604em -0.431em); top: -2.816em; left: 0.003em;"><span class="mtd" id="MathJax-Span-20821"><span class="mrow" id="MathJax-Span-20822"><span class="mi" id="MathJax-Span-20823" style="font-family: MathJax_Math-italic;">x</span><span class="mo" id="MathJax-Span-20824" style="font-family: MathJax_Main; padding-left: 0.274em;">≥</span><span class="mn" id="MathJax-Span-20825" style="font-family: MathJax_Main; padding-left: 0.274em;">0</span></span></span><span style="display: inline-block; width: 0px; height: 2.279em;"></span></span><span style="position: absolute; clip: rect(1.466em 1000em 2.496em -0.431em); top: -1.623em; left: 0.003em;"><span class="mtd" id="MathJax-Span-20831"><span class="mrow" id="MathJax-Span-20832"><span class="mi" id="MathJax-Span-20833" style="font-family: MathJax_Math-italic;">x</span><span class="mo" id="MathJax-Span-20834" style="font-family: MathJax_Main; padding-left: 0.274em;">&lt;</span><span class="mn" id="MathJax-Span-20835" style="font-family: MathJax_Main; padding-left: 0.274em;">0</span></span></span><span style="display: inline-block; width: 0px; height: 2.279em;"></span></span></span><span style="display: inline-block; width: 0px; height: 4.014em;"></span></span></span></span></span></span><span style="display: inline-block; width: 0px; height: 3.309em;"></span></span></span><span style="border-left-width: 0.003em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 3.07em; vertical-align: -1.263em;"></span></span></nobr></span></div><script type="math/tex; mode=display" id="MathJax-Element-1659">sign(x)=\begin{cases}+1,&amp;x\geq0\-1,&amp;x<0\\ \end{cases}</script></p><p>感知机是一种线性分类模型，所以它有自己的几何解释：</p><p><strong>线性方程：</strong><span class="MathJax_Preview"></span><div class="MathJax_Display" role="textbox" aria-readonly="true" style="text-align: center;"><span class="MathJax" id="MathJax-Element-1660-Frame"><nobr><span class="math" id="MathJax-Span-20836" style="width: 6.615em; display: inline-block;"><span style="display: inline-block; position: relative; width: 5.369em; height: 0px; font-size: 123%;"><span style="position: absolute; clip: rect(1.412em 1000em 2.55em -0.485em); top: -2.274em; left: 0.003em;"><span class="mrow" id="MathJax-Span-20837"><span class="mi" id="MathJax-Span-20838" style="font-family: MathJax_Math-italic;">w</span><span class="mo" id="MathJax-Span-20839" style="font-family: MathJax_Main; padding-left: 0.22em;">⋅</span><span class="mi" id="MathJax-Span-20840" style="font-family: MathJax_Math-italic; padding-left: 0.22em;">x</span><span class="mo" id="MathJax-Span-20841" style="font-family: MathJax_Main; padding-left: 0.22em;">+</span><span class="mi" id="MathJax-Span-20842" style="font-family: MathJax_Math-italic; padding-left: 0.22em;">b</span><span class="mo" id="MathJax-Span-20843" style="font-family: MathJax_Main; padding-left: 0.274em;">=</span><span class="mn" id="MathJax-Span-20844" style="font-family: MathJax_Main; padding-left: 0.274em;">0</span></span><span style="display: inline-block; width: 0px; height: 2.279em;"></span></span></span><span style="border-left-width: 0.003em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.07em; vertical-align: -0.197em;"></span></span></nobr></span></div><script type="math/tex; mode=display" id="MathJax-Element-1660">w \cdot x +b = 0</script></p><p>这对应于空间中的一个超平面<span class="MathJax_Preview"></span><span class="MathJax" id="MathJax-Element-1661-Frame" role="textbox" aria-readonly="true"><nobr><span class="math" id="MathJax-Span-20845" style="width: 0.87em; display: inline-block;"><span style="display: inline-block; position: relative; width: 0.707em; height: 0px; font-size: 123%;"><span style="position: absolute; clip: rect(1.412em 1000em 2.442em -0.431em); top: -2.274em; left: 0.003em;"><span class="mrow" id="MathJax-Span-20846"><span class="mi" id="MathJax-Span-20847" style="font-family: MathJax_Math-italic;">S<span style="display: inline-block; overflow: hidden; height: 1px; width: 0.057em;"></span></span></span><span style="display: inline-block; width: 0px; height: 2.279em;"></span></span></span><span style="border-left-width: 0.003em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.003em; vertical-align: -0.063em;"></span></span></nobr></span><script type="math/tex" id="MathJax-Element-1661">S</script>,<span class="MathJax_Preview"></span><span class="MathJax" id="MathJax-Element-1662-Frame" role="textbox" aria-readonly="true"><nobr><span class="math" id="MathJax-Span-20848" style="width: 0.87em; display: inline-block;"><span style="display: inline-block; position: relative; width: 0.707em; height: 0px; font-size: 123%;"><span style="position: absolute; clip: rect(1.683em 1000em 2.442em -0.485em); top: -2.274em; left: 0.003em;"><span class="mrow" id="MathJax-Span-20849"><span class="mi" id="MathJax-Span-20850" style="font-family: MathJax_Math-italic;">w</span></span><span style="display: inline-block; width: 0px; height: 2.279em;"></span></span></span><span style="border-left-width: 0.003em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 0.67em; vertical-align: -0.063em;"></span></span></nobr></span><script type="math/tex" id="MathJax-Element-1662">w</script>是超平面的法向量，<span class="MathJax_Preview"></span><span class="MathJax" id="MathJax-Element-1663-Frame" role="textbox" aria-readonly="true"><nobr><span class="math" id="MathJax-Span-20851" style="width: 0.545em; display: inline-block;"><span style="display: inline-block; position: relative; width: 0.436em; height: 0px; font-size: 123%;"><span style="position: absolute; clip: rect(1.412em 1000em 2.442em -0.431em); top: -2.274em; left: 0.003em;"><span class="mrow" id="MathJax-Span-20852"><span class="mi" id="MathJax-Span-20853" style="font-family: MathJax_Math-italic;">b</span></span><span style="display: inline-block; width: 0px; height: 2.279em;"></span></span></span><span style="border-left-width: 0.003em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.003em; vertical-align: -0.063em;"></span></span></nobr></span><script type="math/tex" id="MathJax-Element-1663">b</script>是超平面的截距</p><img src="/2017/05/26/统计学习方法（二）/1.png"><h3 id="2-2感知机学习策略"><a href="#2-2感知机学习策略" class="headerlink" title="2.2感知机学习策略"></a>2.2感知机学习策略</h3><h1 id="未完待续"><a href="#未完待续" class="headerlink" title="未完待续"></a>未完待续</h1>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;统计学习方法&quot;&gt;&lt;a href=&quot;#统计学习方法&quot; class=&quot;headerlink&quot; title=&quot;统计学习方法&quot;&gt;&lt;/a&gt;统计学习方法&lt;/h1&gt;&lt;p&gt;大部分内容总结自&lt;strong&gt;李航&lt;/strong&gt;博士的&lt;strong&gt;&lt;em&gt;统计学习方法&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;课件：&lt;a href=&quot;http://download.csdn.net/detail/u012610276/9850578&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;统计学习方法课件&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;2-感知机&quot;&gt;&lt;a href=&quot;#2-感知机&quot; class=&quot;headerlink&quot; title=&quot;2.感知机&quot;&gt;&lt;/a&gt;2.感知机&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt;Define:&lt;/em&gt;&lt;/strong&gt;它是一个二分类的线性分类模型，其输入为实例的特征向量，输出为实例的类别，取&lt;strong&gt;{+1，-1}&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&quot;2-1感知机模型&quot;&gt;&lt;a href=&quot;#2-1感知机模型&quot; class=&quot;headerlink&quot; title=&quot;2.1感知机模型&quot;&gt;&lt;/a&gt;2.1感知机模型&lt;/h3&gt;
    
    </summary>
    
      <category term="是时候学点人工智能了" scheme="https://lizhangyan.github.io/categories/%E6%98%AF%E6%97%B6%E5%80%99%E5%AD%A6%E7%82%B9%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E4%BA%86/"/>
    
    
      <category term="统计学习" scheme="https://lizhangyan.github.io/tags/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="机器学习" scheme="https://lizhangyan.github.io/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>[原]统计学习方法笔记（一）</title>
    <link href="https://lizhangyan.github.io/2017/05/24/%E5%8E%9F-%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>https://lizhangyan.github.io/2017/05/24/原-统计学习方法笔记（一）/</id>
    <published>2017-05-24T02:45:28.000Z</published>
    <updated>2017-12-13T09:38:02.541Z</updated>
    
    <content type="html"><![CDATA[<h1 id="统计学习方法"><a href="#统计学习方法" class="headerlink" title="统计学习方法"></a>统计学习方法</h1><p>大部分内容总结自<strong>李航</strong>博士的<strong><em>统计学习方法</em></strong><br><a id="more"></a></p><p>课件：<a href="http://download.csdn.net/detail/u012610276/9850578" target="_blank" rel="noopener">统计学习方法课件</a></p><h2 id="第一章-统计学习方法概论"><a href="#第一章-统计学习方法概论" class="headerlink" title="第一章 统计学习方法概论"></a>第一章 统计学习方法概论</h2>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;统计学习方法&quot;&gt;&lt;a href=&quot;#统计学习方法&quot; class=&quot;headerlink&quot; title=&quot;统计学习方法&quot;&gt;&lt;/a&gt;统计学习方法&lt;/h1&gt;&lt;p&gt;大部分内容总结自&lt;strong&gt;李航&lt;/strong&gt;博士的&lt;strong&gt;&lt;em&gt;统计学习方法&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
    
    </summary>
    
      <category term="是时候学点人工智能了" scheme="https://lizhangyan.github.io/categories/%E6%98%AF%E6%97%B6%E5%80%99%E5%AD%A6%E7%82%B9%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E4%BA%86/"/>
    
    
      <category term="统计学习" scheme="https://lizhangyan.github.io/tags/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="机器学习" scheme="https://lizhangyan.github.io/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>[原]JSP在Eclipse中调用.class</title>
    <link href="https://lizhangyan.github.io/2014/11/01/%E5%8E%9F-JSP%E5%9C%A8Eclipse%E4%B8%AD%E8%B0%83%E7%94%A8-class/"/>
    <id>https://lizhangyan.github.io/2014/11/01/原-JSP在Eclipse中调用-class/</id>
    <published>2014-11-01T13:17:47.000Z</published>
    <updated>2017-12-13T10:32:56.685Z</updated>
    
    <content type="html"><![CDATA[<p>这两天在学习Jsp，在调用.class的时候总是报错，最后才发现再写.Java时必须要用包名，然后再用<br><a id="more"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page import=test.TestBean%&gt;调用</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这两天在学习Jsp，在调用.class的时候总是报错，最后才发现再写.Java时必须要用包名，然后再用&lt;br&gt;
    
    </summary>
    
      <category term="我怎么会这些杂七杂八的东西" scheme="https://lizhangyan.github.io/categories/%E6%88%91%E6%80%8E%E4%B9%88%E4%BC%9A%E8%BF%99%E4%BA%9B%E6%9D%82%E4%B8%83%E6%9D%82%E5%85%AB%E7%9A%84%E4%B8%9C%E8%A5%BF/"/>
    
    
      <category term="java" scheme="https://lizhangyan.github.io/tags/java/"/>
    
      <category term="servlet" scheme="https://lizhangyan.github.io/tags/servlet/"/>
    
  </entry>
  
  <entry>
    <title>[原]C#连接SQLServer</title>
    <link href="https://lizhangyan.github.io/2014/04/19/%E5%8E%9F-C-%E8%BF%9E%E6%8E%A5SQLServer/"/>
    <id>https://lizhangyan.github.io/2014/04/19/原-C-连接SQLServer/</id>
    <published>2014-04-18T16:07:16.000Z</published>
    <updated>2017-12-13T10:32:13.909Z</updated>
    
    <content type="html"><![CDATA[<p>首先你的头文件里必须引用<br><a id="more"></a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">using System.Data;</span><br><span class="line">using System.Data.SqlClient;</span><br></pre></td></tr></table></figure><p>然后是连接数据库<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SqlConnection con = new SqlConnection(Data Source=LZY; Initial Catalog=Student; Integrated Security=true)</span><br></pre></td></tr></table></figure></p><p>其中Data Source后面给的是服务器名，我用的是本地数据库</p><p>Initial Catalog后面是数据库名；</p><p>Integrated Secutity后面如果为“true”或者“SSPI”，表示指定windows 身份验证，如果为“false”，表示不指定Windows身份验证；</p><p>然后是打开数据库<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">con.Open();</span><br><span class="line">MessageBox.Show(数据库 + con.ServerVersion + con.State)</span><br></pre></td></tr></table></figure></p><p>ServerVersion好像是可以看你数据库的下图蓝色圈里的数字，不知道是什么东西，State则是数据库的状态：打开还是关闭</p><p><img src="http://img.blog.csdn.net/20140419000525593?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMjYxMDI3Ng==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p>附上一个完整代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">using System;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using System.ComponentModel;</span><br><span class="line">using System.Data;</span><br><span class="line">using System.Drawing;</span><br><span class="line">using System.Linq;</span><br><span class="line">using System.Text;</span><br><span class="line">using System.Threading.Tasks;</span><br><span class="line">using System.Windows.Forms;</span><br><span class="line">using System.Data.SqlClient;</span><br><span class="line"></span><br><span class="line">namespace SQL</span><br><span class="line">&#123;</span><br><span class="line">    public partial class OpenSQL : Form</span><br><span class="line">    &#123;</span><br><span class="line">        public OpenSQL()</span><br><span class="line">        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        private void Form1_Load(object sender, EventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        private void button1_Click(object sender, EventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">            using (SqlConnection con = new SqlConnection(Data Source=LZY; Initial Catalog=Student; Integrated Security=true))</span><br><span class="line">            &#123;</span><br><span class="line">                try</span><br><span class="line">                &#123;</span><br><span class="line">                    con.Open();</span><br><span class="line">                    MessageBox.Show(数据库+con.ServerVersion+con.State);&lt;/pre&gt;&lt;pre code_snippet_id=&quot;300627&quot; snippet_file_name=&quot;blog_20140419_5_992152&quot;  class=&quot;csharp&quot; name=&quot;code&quot;&gt;                &#125;</span><br><span class="line">                catch (Exception ex)</span><br><span class="line">                &#123;</span><br><span class="line">                    MessageBox.Show(ex.ToString());</span><br><span class="line">                &#125;</span><br><span class="line">                finally</span><br><span class="line">                &#123;</span><br><span class="line">                      con.Close();</span><br><span class="line">                      MessageBox.Show(数据库+ con.State);</span><br><span class="line">                      Application.Exit();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;首先你的头文件里必须引用&lt;br&gt;
    
    </summary>
    
      <category term="我怎么会这些杂七杂八的东西" scheme="https://lizhangyan.github.io/categories/%E6%88%91%E6%80%8E%E4%B9%88%E4%BC%9A%E8%BF%99%E4%BA%9B%E6%9D%82%E4%B8%83%E6%9D%82%E5%85%AB%E7%9A%84%E4%B8%9C%E8%A5%BF/"/>
    
    
      <category term="SQL" scheme="https://lizhangyan.github.io/tags/SQL/"/>
    
      <category term="C#" scheme="https://lizhangyan.github.io/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>[原]括号匹配</title>
    <link href="https://lizhangyan.github.io/2014/04/13/%E5%8E%9F-%E6%8B%AC%E5%8F%B7%E5%8C%B9%E9%85%8D/"/>
    <id>https://lizhangyan.github.io/2014/04/13/原-括号匹配/</id>
    <published>2014-04-13T07:58:42.000Z</published>
    <updated>2017-12-13T10:36:42.883Z</updated>
    
    <content type="html"><![CDATA[<blockquote><blockquote><p>括号匹配算法</p></blockquote></blockquote><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdlib.h&gt;</span><br><span class="line">#define MAX 100</span><br><span class="line">#define ADD 10</span><br><span class="line">typedef struct</span><br><span class="line">&#123;</span><br><span class="line">char *top;</span><br><span class="line">char *base;</span><br><span class="line">int stacksize;</span><br><span class="line">&#125;Stack;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">void CreatStack(Stack *S)</span><br><span class="line">&#123;</span><br><span class="line">S-&amp;gt;base=(char *)malloc(MAX*sizeof(char));</span><br><span class="line">if(!S)</span><br><span class="line">&#123;</span><br><span class="line">printf(&amp;quot;申请失败\n&amp;quot;);</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">S-&amp;gt;top=S-&amp;gt;base;</span><br><span class="line">S-&amp;gt;stacksize=MAX;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void Push(Stack *S, char ch)</span><br><span class="line">&#123;</span><br><span class="line">char *newbase;</span><br><span class="line">if(S-&amp;gt;top-S-&amp;gt;base&amp;gt;=S-&amp;gt;stacksize)</span><br><span class="line">&#123;</span><br><span class="line">newbase=(char*)realloc(S-&amp;gt;base, (S-&amp;gt;stacksize+ADD)*sizeof(char));</span><br><span class="line">if(!newbase)</span><br><span class="line">&#123;</span><br><span class="line">printf(&amp;quot;申请失败\n&amp;quot;);</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">S-&amp;gt;top=S-&amp;gt;base+S-&amp;gt;stacksize;</span><br><span class="line">S-&amp;gt;stacksize+=ADD;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">*(S-&amp;gt;top++)=ch;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">char Pop(Stack *S)</span><br><span class="line">&#123;</span><br><span class="line">return *(S-&amp;gt;top-1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void Delete(Stack *S)</span><br><span class="line">&#123;</span><br><span class="line">S-&amp;gt;top--;</span><br><span class="line">&#125;</span><br><span class="line">int cmp(Stack *S)</span><br><span class="line">&#123;</span><br><span class="line">char ch;</span><br><span class="line">int tag=1;</span><br><span class="line">scanf(&amp;quot;%c&amp;quot;, &amp;amp;ch);</span><br><span class="line">while(ch!=&apos;#&apos;&amp;amp;&amp;amp;tag)</span><br><span class="line">&#123;</span><br><span class="line">switch(ch)</span><br><span class="line">&#123;</span><br><span class="line">case &apos;(&apos;:</span><br><span class="line">case &apos;[&apos;:</span><br><span class="line">case &apos;&#123;&apos;:</span><br><span class="line">Push(S,ch);</span><br><span class="line">break;</span><br><span class="line">case &apos;)&apos;:</span><br><span class="line">if(Pop(S)==&apos;(&apos;)</span><br><span class="line">&#123;</span><br><span class="line">Delete(S); break;</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">tag=0;</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line">case &apos;]&apos;:</span><br><span class="line">if(Pop(S)==&apos;[&apos;)</span><br><span class="line">&#123;</span><br><span class="line">Delete(S);break;</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">tag=0;</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line">case &apos;&#125;&apos;:</span><br><span class="line">if(Pop(S)==&apos;&#123;&apos;)</span><br><span class="line">&#123;</span><br><span class="line">Delete(S); break;</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">tag=0;</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">scanf(&amp;quot;%c&amp;quot;, &amp;amp;ch);</span><br><span class="line">&#125;</span><br><span class="line">return tag;</span><br><span class="line">&#125;</span><br><span class="line">void main()</span><br><span class="line">&#123;</span><br><span class="line">int tag;</span><br><span class="line">Stack S;</span><br><span class="line">CreatStack(&amp;amp;S);</span><br><span class="line">printf(&amp;quot;括号匹配，以#结束\n&amp;quot;);</span><br><span class="line">tag=cmp(&amp;amp;S);</span><br><span class="line">if(tag)</span><br><span class="line">&#123;</span><br><span class="line">printf(&amp;quot;匹配成功\n&amp;quot;);</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">printf(&amp;quot;匹配失败\n&amp;quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>学完数据结构的括号匹配，发上源代码，请大家多多指教啊</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;括号匹配算法&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="是时候学点算法了" scheme="https://lizhangyan.github.io/categories/%E6%98%AF%E6%97%B6%E5%80%99%E5%AD%A6%E7%82%B9%E7%AE%97%E6%B3%95%E4%BA%86/"/>
    
    
      <category term="算法" scheme="https://lizhangyan.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
</feed>
